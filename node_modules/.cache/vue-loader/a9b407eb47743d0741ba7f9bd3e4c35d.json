{"remainingRequest":"C:\\Users\\deita\\GoogleDrive\\5º\\TFG\\Fiktin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\deita\\GoogleDrive\\5º\\TFG\\Fiktin\\src\\components\\ModifyLibrary.vue?vue&type=style&index=0&id=6ec8aa21&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\deita\\GoogleDrive\\5º\\TFG\\Fiktin\\src\\components\\ModifyLibrary.vue","mtime":1576195122823},{"path":"C:\\Users\\deita\\GoogleDrive\\5º\\TFG\\Fiktin\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\deita\\GoogleDrive\\5º\\TFG\\Fiktin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\deita\\GoogleDrive\\5º\\TFG\\Fiktin\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\deita\\GoogleDrive\\5º\\TFG\\Fiktin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\deita\\GoogleDrive\\5º\\TFG\\Fiktin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouY3JlYXRlIHsNCiAgcGFkZGluZzogMTBweDsNCn0NCg0KLnJlZCB7DQogIGJvcmRlci1zdHlsZTogc29saWQ7DQogIGJvcmRlci13aWR0aDogMXB4Ow0KICBib3JkZXItY29sb3I6ICNERThGOEY7DQp9DQoNCi5tb2RlbE5hbWUgew0KICB3aWR0aDogNzUlOw0KICBoZWlnaHQ6IDE1cHg7DQogIHJlc2l6ZTogbm9uZTsNCn0NCg0KLm1vZGVsRGVzYyB7DQogIHdpZHRoOiA3NSU7DQogIGhlaWdodDogNzVweDsNCiAgcmVzaXplOiBub25lOw0KfQ0KDQouYnV0dG9uIHsNCiAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRncmVlbjsNCiAgYm9yZGVyOiAxcHggc29saWQgZGFya2dyZWVuOw0KICBtYXJnaW4tcmlnaHQ6IDVweDsNCn0NCg=="},{"version":3,"sources":["ModifyLibrary.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"ModifyLibrary.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"create\" >\r\n    <textarea v-if=\"name.length===0\" class=\"modelName\" :class=\"{red: name.length===0}\" v-model=\"name\" placeholder=\"Nombre\" @keydown.space.prevent @input=\"characterLimitName\" @paste=\"characterLimitName\"/>\r\n    <textarea v-else v-model=\"name\" class=\"modelName\" :class=\"{red: checkNames()}\" placeholder=\"Nombre\" @input=\"characterLimitName\" @paste=\"characterLimitName\"/>\r\n    <span> {{getNameTam}} / 50 </span>\r\n    <br><br>\r\n    <textarea v-if=\"description.length===0\" class=\"modelDesc\" v-model=\"description\" placeholder=\"Descripción\" @keydown.space.prevent @keydown.enter.prevent @input=\"characterLimitDescription\" @paste=\"characterLimitDescription\"/>\r\n    <textarea v-else v-model=\"description\" class=\"modelDesc\" :class=\"{red: !checkDescription()}\" placeholder=\"Descripción\" @keydown.enter.prevent @input=\"characterLimitDescription\" @paste=\"characterLimitDescription\"/>\r\n    <span> {{getDescriptionTam}} / 300</span>\r\n    <br><br>\r\n    <span>¿Cómo deseas la privacidad de tu biblioteca?</span>\r\n    <br>\r\n    <input type=\"radio\" id=\"public\" value=\"public\" v-model=\"privacy\" >\r\n    <label for=\"uno\">Pública: La podrá ver todo el mundo</label>\r\n    <br>\r\n    <input type=\"radio\" id=\"private\" value=\"private\" v-model=\"privacy\">\r\n    <label for=\"Dos\">Privada: Solo la podrás ver tú</label>\r\n    <br><br>\r\n    <button class=\"button\" @click=\"modifyButton()\" :disabled=\"this.name.length <= 0 || checkNames() || !checkDescription()\">Guardar</button>\r\n    <button class=\"button\" @click=\"cancelButton()\">Descartar cambios</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { librariesCollection } from '../firebase.js'\r\n\r\nexport default {\r\n  name: 'CreateLibrary',\r\n  props: {\r\n    index: Number,\r\n    nameAux: String,\r\n    descriptionAux: String,\r\n    privacyAux: String\r\n  },\r\n  data () {\r\n    return {\r\n      name: this.nameAux,\r\n      namePrevious: this.nameAux,\r\n      description: this.descriptionAux,\r\n      privacy: this.privacyAux,\r\n      librariesNamesList: []\r\n    }\r\n  },\r\n  mounted () {\r\n    librariesCollection.where('userNick', '==', '1').get().then(snapshot => { snapshot.forEach(doc => { if (doc.data().name !== this.nameAux) this.librariesNamesList.push({ name: doc.data().name }) }) })\r\n  },\r\n  computed: {\r\n    getNameTam () {\r\n      return this.name.length\r\n    },\r\n    getDescriptionTam () {\r\n      return this.description.length\r\n    }\r\n  },\r\n  methods: {\r\n    characterLimitName () {\r\n      let nameAux2 = this.name\r\n      let nameLength = this.name.length\r\n      if (nameAux2.length > 50) {\r\n        nameLength -= 50\r\n        this.name = nameAux2.slice(0, -nameLength)\r\n      }\r\n    },\r\n    characterLimitDescription () {\r\n      let descAux = this.description\r\n      let descLength = this.description.length\r\n      if (descAux.length > 300) {\r\n        descLength -= 300\r\n        this.description = descAux.slice(0, -descLength)\r\n      }\r\n    },\r\n    checkNames () {\r\n      let coincidence = false\r\n      // Comprobamos si el usuario ya tiene una biblioteca con este nombre\r\n      for (let i = 0; i < this.librariesNamesList.length; ++i) {\r\n        if (this.name === this.librariesNamesList[i].name) {\r\n          coincidence = true\r\n          break\r\n        }\r\n      }\r\n      // Comprobamos si tiene espacios al final\r\n      if (!coincidence) {\r\n        if (this.name[this.name.length - 1] === ' ') coincidence = true\r\n      }\r\n      return coincidence\r\n    },\r\n    checkDescription () {\r\n      // Comprobamos la longitud\r\n      if (this.description.length > 0) {\r\n        // Comprobamos que no haya espacios al final\r\n        if (this.description[this.description.length - 1] === ' ') return false\r\n        // Comprobamos que no haya intros al pegar un párrafo\r\n        for (let i = 0; i < this.description.length; ++i) {\r\n          if (this.description[i] === '\\n') {\r\n            return false\r\n          }\r\n        }\r\n      }\r\n      return true\r\n    },\r\n    modifyButton () {\r\n      let uniqueIDPrev = '1' + this.namePrevious\r\n      let uniqueID = '1' + this.name\r\n      if (this.name === this.nameAux) {\r\n        // En caso de que no se modifique el nombre, no se actualiza el id, luego solo hay que actualizar el documento\r\n        librariesCollection.doc(uniqueIDPrev).update({\r\n          name: this.name,\r\n          description: this.description,\r\n          privacy: this.privacy,\r\n          userNick: '1'\r\n        }).then(() => {\r\n          this.$emit('modify')\r\n        })\r\n      } else {\r\n        // En caso de que el nombre se haya modificado, se actualiza el id. Hay que clonar y borrar el anterior\r\n        librariesCollection.doc(uniqueID).set({\r\n          name: this.name,\r\n          description: this.description,\r\n          privacy: this.privacy,\r\n          userNick: '1'\r\n        }).then(() => {\r\n          librariesCollection.doc(uniqueIDPrev).delete().then(() => {\r\n            this.$emit('modify')\r\n          })\r\n        })\r\n      }\r\n    },\r\n    cancelButton () {\r\n      this.$emit('cancel', -1)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.create {\r\n  padding: 10px;\r\n}\r\n\r\n.red {\r\n  border-style: solid;\r\n  border-width: 1px;\r\n  border-color: #DE8F8F;\r\n}\r\n\r\n.modelName {\r\n  width: 75%;\r\n  height: 15px;\r\n  resize: none;\r\n}\r\n\r\n.modelDesc {\r\n  width: 75%;\r\n  height: 75px;\r\n  resize: none;\r\n}\r\n\r\n.button {\r\n  background-color: lightgreen;\r\n  border: 1px solid darkgreen;\r\n  margin-right: 5px;\r\n}\r\n</style>\r\n"]}]}